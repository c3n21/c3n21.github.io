name: Deploy to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-web:
    runs-on: ubuntu-latest
    outputs:
      pnpm-cache-key: ${{ steps.export-cache-key.outputs.key }}
      neovim-lines: ${{ steps.lines.outputs.count }}
    steps:
      - uses: actions/checkout@v4

      - name: Checkout NeoVim config
        uses: actions/checkout@v4
        with:
          repository: 'c3n21/nvim-configuration'
          path: './neovim_config'

      - id: lines
        name: Calculate total lines in NeoVim config
        run: |
          COUNT=$(find . -path './.git*' -prune -o -type f -exec wc -l {} \; | awk '{sum+=$1} END {print sum}')
          echo "count=$COUNT" >> "$GITHUB_OUTPUT"
          echo "NEOVIM_CONFIG_LINES=$COUNT" >> "$GITHUB_ENV"
        working-directory: './neovim_config'

      - name: Set CV_LOCATION environment variable
        run: |
          TAG_NAME=${GITHUB_REF_NAME#refs/tags/}
          PDF_URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/${TAG_NAME}/cv.pdf"
          echo "CV_LOCATION=$PDF_URL" >> $GITHUB_ENV

      - uses: ./.github/actions/build-with-cv
        with:
          cv: ${{ secrets.CV }}

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/

  build-cv:
    needs: build-web
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
      NEOVIM_CONFIG_LINES: ${{ needs.build-web.outputs.neovim-lines }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: ~/.local/share/pnpm/store/v3
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - uses: ./.github/actions/build-with-cv
        with:
          cv: ${{ secrets.CV }}
        env:
          CV: dark

      - name: Install chrome for Puppeteer
        run: |
          sudo npx puppeteer browsers install chrome --install-deps

      - name: Generate PDF from built site
        run: |
          pnpm run export-pdf

      - name: Upload PDF as Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./cv.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    needs: build-web
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
