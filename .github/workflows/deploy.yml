name: Deploy to GitHub Pages

on:
  # Allows you to run this workflow manually from the Actions tab on GitHub.
  workflow_dispatch:

# Allow this job to clone the repo and create a page deployment
permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_RUN_NUMBER: ${{ github.run_number }}
    steps:
      - name: Checkout your repository using git
        uses: actions/checkout@v4

      - uses: actions/checkout@v4
        with:
          # Repository name with owner. For example, actions/checkout
          # Default: ${{ github.repository }}
          repository: 'c3n21/nvim-configuration'
          path: './neovim_config'

      - name: Calculate total number of lines in NeoVim config
        run: echo "NEOVIM_CONFIG_LINES=$(find . -path './.git*' -prune -o -type f -exec wc -l {} \; | awk '{sum+=$1} END {print sum}')" >> "$GITHUB_ENV"
        working-directory: './neovim_config'

      - name: Write cv.json from secret
        run: |
          echo "Run number: ${GITHUB_RUN_NUMBER}"
          cat <<EOF > src/cv.json
          ${{ secrets.CV }}
          EOF

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9
          # package_json_file: "${{ inputs.path }}/package.json"

      - name: Install deps
        run: pnpm install

      - name: Set CV_LOCATION, CV environment variable
        run: |
          TAG_NAME=${GITHUB_REF#refs/tags/}
          PDF_URL="https://github.com/${GITHUB_REPOSITORY}/releases/download/${TAG_NAME}/cv.pdf"
          echo "CV_LOCATION=$PDF_URL" >> $GITHUB_ENV

      - name: Build CV version
        run: |
          CV=dark pnpm build

      - name: Install chrome for Puppeteer
        run: |
          sudo npx puppeteer browsers install chrome --install-deps

      - name: Generate PDF from built site
        run: |
          pnpm run export-pdf

      - name: Create GitHub Release (if not exists)
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload PDF as Release Asset
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: ./cv.pdf
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Unset CV= environment variable to build web version and remove dist
        run: |
          echo "CV=" >> $GITHUB_ENV
          rm -r ./dist

      - name: Build web version
        run: |
          pnpm build

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist/

      - name: Remove cv.json
        run: rm src/cv.json

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
